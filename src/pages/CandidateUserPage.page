<apex:page title="Salesforce SOQL Offset Example Using Visualforce"  controller="CandidateUserObject" showHeader="true" sidebar="false" readOnly="true" cache="false">
    <apex:sectionHeader subtitle="SOQL Offset Example" title="SOQL Offset Example"/>
    <apex:pageBlock >
        <apex:pageBlockButtons location="bottom">
            <apex:outputPanel id="myButtons">
                <apex:form >
                    <apex:commandButton action="{!Beginning}" title="Beginning" value="<<" disabled="{!disablePrevious}" reRender=" myButtons, myPanel"/>
                    <apex:commandButton action="{!Previous}" title="Previos"  disabled="{!disablePrevious}" value="<"  reRender=" myButtons, myPanel" />
                    <apex:commandButton action="{!Next}" title="Next" value=">" disabled="{!disableNext}"  reRender=" myButtons, myPanel" />
                    <apex:commandButton action="{!End}" title="End" value=">>" disabled="{!disableNext}"  reRender=" myButtons, myPanel" />
                </apex:form>
            </apex:outputPanel>
        </apex:pageBlockButtons>
        <apex:pageBlockSection columns="1">
            <p>This Visualforce Page demonstrates the usage of the "OFFSET" clause in a SOQL SELECT statement.  You can "Paginate" through 
                a large result set quickly.  This example allows a user to paginate up and down through a result set 20 records at a time.  
                Using the "VCR" buttons above, you can also quickly skip to the end or the beginning of the set.                
            </p>
            <p>The accompanying code can be viewed here:  <a href="http://blog.redpointsolutions.com/bid/182738/Add-Pagination-to-your-Visualforce-Pages-using-the-SOQL-OFFSET-Clause" target="_blank">RedPoint Solutions BLOG</a></p>
       </apex:pageBlockSection>
        <apex:pageBlockSection title="List of Candidate User totalListSize: {!total_size}" collapsible="false" >
            <apex:outputPanel id="myPanel">
                <apex:pageMessages id="theMessages">
                </apex:pageMessages>
                 <apex:pageBlockTable value="{!numbers}" var="cand">
                     <apex:column value="{!cand.First_Name__c}" />
       				 <apex:column value="{!cand.LastName__c}" />
                </apex:pageBlockTable>
            </apex:outputPanel>
        </apex:pageBlockSection>
    </apex:pageBlock>
</apex:page>